{"version":3,"file":"static/js/236.ab1703a9.chunk.js","mappings":"mPAOMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaG,WACpBE,SAAUL,EAAAA,KAAaG,aAGnBG,EAAgB,CACpBJ,KAAM,GACNE,MAAO,GACPC,SAAU,IAGCE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKC,UAAU,wEAAf,WACA,iBAAKA,UAAU,0GAAf,WACE,SAAC,KAAD,CACEJ,cAAeA,EACfK,iBAAkBZ,EAClBa,SAXe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,GAASO,EAAAA,EAAAA,IAASF,IAClBC,GACD,EAKG,UAKE,UAAC,KAAD,CAAMJ,UAAU,2EAAhB,WACE,mBAAOA,UAAU,+CAAjB,kBAEE,SAAC,KAAD,CACEA,UAAU,iDACVM,KAAK,OACLd,KAAK,OACLe,QAAQ,yHACRC,MAAM,yIACNf,UAAQ,KAEV,SAAC,KAAD,CACEO,UAAU,oCACVR,KAAK,OACLiB,UAAU,aAGd,mBAAOT,UAAU,+CAAjB,mBAEE,SAAC,KAAD,CACEA,UAAU,iDACVM,KAAK,QACLd,KAAK,QACLe,QAAQ,wCACRC,MAAM,6BACNf,UAAQ,KAEV,SAAC,KAAD,CACEO,UAAU,oCACVR,KAAK,QACLiB,UAAU,aAGd,mBAAOT,UAAU,+CAAjB,sBAEE,SAAC,KAAD,CACEA,UAAU,iDACVM,KAAK,WACLd,KAAK,WACLgB,MAAM,gCACNf,UAAQ,KAEV,SAAC,KAAD,CACEO,UAAU,oCACVR,KAAK,WACLiB,UAAU,aAGd,mBACET,UAAU,mJACVM,KAAK,SAFP,4BAQJ,mBAAQN,UAAU,sIAAsIM,KAAK,SAA7J,mBAEF,gBAAKN,UAAU,uBAAf,UACJ,gBAAKU,IAAKC,EAAeC,IAAI,GAAGZ,UAAU,qBAIzC,ECxFD,EARiB,WACf,OACE,+BACE,SAACH,EAAD,KAGL,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport imageRegister  from '../../images/imageRegister.jpg';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n    resetForm();\n  };\n\n  return (\n    <div className='relative flex flex-grow justify-between w-2/4 text-left  items-center'>\n    <div className=' flex flex-col justify-between items-center h-full p-4  bg-teal-700 rounded-2xl border-2 border-sky-700'>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <Form className=\"flex flex-col h-96 mb-5 p-4 bg-white rounded-2xl border-2 border-sky-700\">\n          <label className=\"flex flex-col gap-1 mb-2 font-medium text-lg\">\n            Name\n            <Field\n              className=\"p-1 text-lg border-2 border-solid w-72 rounded\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n            />\n            <ErrorMessage\n              className=\"text-rose-700 text-xs font-normal\"\n              name=\"name\"\n              component=\"span\"\n            />\n          </label>\n          <label className=\"flex flex-col gap-1 mb-2 font-medium text-lg\">\n            Email\n            <Field\n              className=\"p-1 text-lg border-2 border-solid w-72 rounded\"\n              type=\"email\"\n              name=\"email\"\n              pattern=\"/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\"\n              title=\"Please enter a valid email\"\n              required\n            />\n            <ErrorMessage\n              className=\"text-rose-700 text-xs font-normal\"\n              name=\"email\"\n              component=\"span\"\n            />\n          </label>\n          <label className=\"flex flex-col gap-1 mb-4 font-medium text-lg\">\n            Password\n            <Field\n              className=\"p-1 text-lg border-2 border-solid w-72 rounded\"\n              type=\"password\"\n              name=\"password\"\n              title=\"Please enter a valid password\"\n              required\n            />\n            <ErrorMessage\n              className=\"text-rose-700 text-xs font-normal\"\n              name=\"password\"\n              component=\"span\"\n            />\n          </label>\n          <button\n            className=\"text-gray-dark w-20 h-8 px-2 py-1 text-sm border-2 font-medium border-gray-dark rounded-lg hover:text-orange  hover:border-orange curcor-pointer\"\n            type=\"submit\"\n          >\n            Register\n          </button>\n        </Form>\n      </Formik>\n      <button className='text-gray-dark w-20 h-8 px-2 py-1 text-sm border-2 border-gray-dark rounded-lg hover:text-orange hover:border-orange curcor-pointer' type='button'> </button>\n    </div>\n    <div className='hidden md:flex w-2/4'>\n<img src={imageRegister} alt='' className='object-cover'/>\n      </div>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n\nexport default Register;"],"names":["schema","yup","shape","name","required","email","password","initialValues","RegisterForm","dispatch","useDispatch","className","validationSchema","onSubmit","values","resetForm","register","type","pattern","title","component","src","imageRegister","alt"],"sourceRoot":""}